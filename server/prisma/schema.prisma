generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  forms    Form[]
}

model Form {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  questions   Question[]
  responses   Response[]
  creatorId   Int
  createdBy   User       @relation(fields: [creatorId], references: [id])
}

model Question {
  id           Int          @id @default(autoincrement())
  questionText String
  type         QuestionType
  options      String[]
  answers      Answer[]
  formId       Int
  form         Form         @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model Response {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now())
  answers   Answer[]
  formId    Int
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model Answer {
  id             Int      @id @default(autoincrement())
  answerText     String?
  selectedOption Int?
  quesId         Int
  respId         Int
  question       Question @relation(fields: [quesId], references: [id], onDelete: Cascade)
  response       Response @relation(fields: [respId], references: [id], onDelete: Cascade)
}

model PendingVerification {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  otp       String
  createdAt DateTime @default(now())
}

enum QuestionType {
  PARAGRAPH
  SCALE
}